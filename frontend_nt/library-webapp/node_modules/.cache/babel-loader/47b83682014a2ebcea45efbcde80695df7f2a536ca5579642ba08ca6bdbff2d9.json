{"ast":null,"code":"var _jsxFileName = \"/Users/marynaborovyk/Desktop/semestr-4/Network_Technologies/Project/projectNetworkTechnologies/frontend_nt/library-webapp/src/home-page/Home-page.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { AppBar, Toolbar, Typography, Grid, Card, CardContent, Accordion, AccordionSummary, AccordionDetails, Button } from \"@mui/material\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport \"./Home-page.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport LogoutRoundedIcon from \"@mui/icons-material/LogoutRounded\";\nimport MenuBookRoundedIcon from \"@mui/icons-material/MenuBookRounded\";\nimport { useEffect, useState } from \"react\";\nimport { useApi } from \"../api/ApiProvide\";\nimport { useTranslation } from \"react-i18next\";\n\n// const sortedBooks = books.sort((a, b) => b.rating - a.rating).slice(0, 4);\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [books, setBooks] = useState([]);\n  const [sortedBooks, setSortedBooks] = useState({});\n  const apiClient = useApi();\n  useEffect(() => {\n    const fetchBooks = async () => {\n      const response = await apiClient.getBooks();\n      if (response.success) {\n        const fetchedBooks = response.data;\n        const promises = fetchedBooks.map(async book => {\n          const detailsResponse = await apiClient.getBookDetails(book.id);\n          if (detailsResponse.success) {\n            return {\n              ...book,\n              ...detailsResponse.data\n            };\n          } else {\n            console.error(\"Failed to fetch details for book:\", book.id, detailsResponse.data);\n            return {\n              ...book,\n              genre: \"No data\",\n              summary: \"No data\",\n              coverImageUrl: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTNT0xwyLstvC7wH8jYIKur3GTcSq-g6fj2EbL4wk-qaONHYjBswa3rpFsZJeEjuXcG-lw&usqp=CAU\"\n            };\n          }\n        });\n        const booksWithDetails = await Promise.all(promises);\n        console.log(\"Books with Details:\", booksWithDetails);\n        setBooks(booksWithDetails);\n        const sorted = booksWithDetails.reduce((acc, book) => {\n          const genre = !book.genre || book.genre === \"No data\" ? \"Not Categorized\" : book.genre;\n          if (!acc[genre]) {\n            acc[genre] = [];\n          }\n          acc[genre].push(book);\n          return acc;\n        }, {});\n        console.log(\"Sorted Books:\", sorted);\n        setSortedBooks(sorted);\n      }\n    };\n    fetchBooks();\n  }, [apiClient]);\n  const navigate = useNavigate();\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  /* return (\n    <div>\n      <AppBar position=\"static\" className=\"AppBar\">\n        <Toolbar className=\"ToolBar\">\n          <Typography\n            variant=\"h6\"\n            component=\"div\"\n            style={{ marginRight: \"20px\" }}\n          >\n            <MenuBookRoundedIcon /> My Library\n          </Typography>\n          <Button\n            color=\"inherit\"\n            onClick={() => {\n              navigate(\"/home\");\n            }}\n          >\n            All Books\n          </Button>\n          <Button\n            color=\"inherit\"\n            onClick={() => {\n              navigate(\"/loans\");\n            }}\n          >\n            Your Books\n          </Button>\n          <Button\n            color=\"inherit\"\n            endIcon={<LogoutRoundedIcon />}\n            onClick={() => {\n              navigate(\"/login\");\n            }}\n          >\n            Log Out\n          </Button>\n        </Toolbar>\n      </AppBar>\n       <Typography variant=\"h4\" component=\"h2\" className=\"section-title\">\n        Most Popular Books\n      </Typography>\n      <Grid container justifyContent=\"center\" spacing={3} className=\"book-list\">\n        {sortedBooks.map((book, index) => {\n          console.log(book.rating);\n          return (\n            <Grid item xs={12} sm={6} md={4} lg={3} key={index}>\n              <Card className=\"book-card\">\n                <CardContent>\n                  <Typography\n                    variant=\"h5\"\n                    component=\"h2\"\n                    className=\"book-title\"\n                  >\n                    {book.title}\n                  </Typography>\n                  <Typography className=\"book-author\">{book.author}</Typography>\n                  <img\n                    className=\"book-cover\"\n                    src={book.coverImageUrl}\n                    alt={book.title}\n                    style={{ width: \"100%\", height: \"auto\" }}\n                  />\n                   <Rating\n                    name=\"book-rating\"\n                    value={book.rating}\n                    precision={0.5}\n                    readOnly\n                  />\n                </CardContent>\n                <Accordion>\n                  <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                  >\n                    <Typography>Details</Typography>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    <Typography>\n                      Genre: {book.genre} <br />\n                      Summary: {book.summary} <br />\n                      Rating: {book.rating} <br />\n                    </Typography>\n                  </AccordionDetails>\n                </Accordion>\n              </Card>\n            </Grid>\n          );\n        })}\n      </Grid>\n       {genres.map((genre, index) => (\n        <div key={index}>\n          <Typography variant=\"h4\" component=\"h2\" className=\"section-title\">\n            {genre}\n          </Typography>\n           <Grid\n            container\n            justifyContent=\"center\"\n            spacing={3}\n            className=\"book-list\"\n          >\n            {books\n              .filter((book) => book.genre === genre)\n              .map((book, index) => (\n                <Grid item xs={12} sm={6} md={4} lg={3} key={index}>\n                  <Card className=\"book-card\">\n                    <CardContent>\n                      <Typography\n                        variant=\"h5\"\n                        component=\"h2\"\n                        className=\"book-title\"\n                      >\n                        {book.title}\n                      </Typography>\n                      <Typography className=\"book-author\">\n                        {book.author}\n                      </Typography>\n                      <img\n                        className=\"book-cover\"\n                        src={book.coverImageUrl}\n                        alt={book.title}\n                        style={{ width: \"100%\", height: \"auto\" }}\n                      />\n                      <Rating\n                        name=\"book-rating\"\n                        value={book.rating}\n                        precision={0.5}\n                        readOnly\n                      />\n                    </CardContent>\n                    <Accordion>\n                      <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1a-content\"\n                        id=\"panel1a-header\"\n                      >\n                        <Typography>Details</Typography>\n                      </AccordionSummary>\n                      <AccordionDetails>\n                        <Typography>\n                          Genre: {book.genre} <br />\n                          Summary: {book.summary} <br />\n                          <Button variant=\"contained\" color=\"primary\">\n                            Borrow Book\n                          </Button>\n                        </Typography>\n                      </AccordionDetails>\n                    </Accordion>\n                  </Card>\n                </Grid>\n              ))}\n          </Grid>\n         </div>\n      ))}\n    </div>\n  );\n    */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      className: \"AppBar\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: \"ToolBar\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"div\",\n          style: {\n            marginRight: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(MenuBookRoundedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), \" \", t(\"library\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          onClick: () => {\n            navigate(\"/home\");\n          },\n          children: t(\"books\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          onClick: () => {\n            navigate(\"/loans\");\n          },\n          children: \"Your Books\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          onClick: () => {\n            navigate(\"/admin\");\n          },\n          children: \"Admin Console\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          endIcon: /*#__PURE__*/_jsxDEV(LogoutRoundedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 22\n          }, this),\n          onClick: () => {\n            navigate(\"/login\");\n          },\n          children: \"Log Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), Object.keys(sortedBooks).map((genre, genreIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h2\",\n        className: \"section-title\",\n        children: genre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justifyContent: \"center\",\n        spacing: 3,\n        className: \"book-list\",\n        children: sortedBooks[genre].map((book, bookIndex) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"book-card\",\n            children: [/*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                component: \"h2\",\n                className: \"book-title\",\n                children: book.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                className: \"book-author\",\n                children: book.author\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"book-cover\",\n                src: book.coverImageUrl,\n                alt: book.title,\n                style: {\n                  width: \"100%\",\n                  height: \"auto\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n              children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n                expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 35\n                }, this),\n                \"aria-controls\": \"panel1a-content\",\n                id: \"panel1a-header\",\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  children: \"Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  children: [\"Year Published: \", book.yearPublished, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 342,\n                    columnNumber: 62\n                  }, this), \"Genre: \", book.genre, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 343,\n                    columnNumber: 45\n                  }, this), \"Summary: \", book.summary, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 344,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 17\n          }, this)\n        }, bookIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }, this)]\n    }, genreIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"X8Fjf5gaaycq5IeSUSfuH408EBo=\", false, function () {\n  return [useApi, useNavigate, useTranslation];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","AppBar","Toolbar","Typography","Grid","Card","CardContent","Accordion","AccordionSummary","AccordionDetails","Button","ExpandMoreIcon","useNavigate","LogoutRoundedIcon","MenuBookRoundedIcon","useEffect","useState","useApi","useTranslation","jsxDEV","_jsxDEV","HomePage","_s","books","setBooks","sortedBooks","setSortedBooks","apiClient","fetchBooks","response","getBooks","success","fetchedBooks","data","promises","map","book","detailsResponse","getBookDetails","id","console","error","genre","summary","coverImageUrl","booksWithDetails","Promise","all","log","sorted","reduce","acc","push","navigate","t","i18n","children","position","className","variant","component","style","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","endIcon","Object","keys","genreIndex","container","justifyContent","spacing","bookIndex","item","xs","sm","md","lg","title","author","src","alt","width","height","expandIcon","yearPublished","_c","$RefreshReg$"],"sources":["/Users/marynaborovyk/Desktop/semestr-4/Network_Technologies/Project/projectNetworkTechnologies/frontend_nt/library-webapp/src/home-page/Home-page.tsx"],"sourcesContent":["import React from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Grid,\n  Card,\n  CardContent,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Button,\n} from \"@mui/material\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport \"./Home-page.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport LogoutRoundedIcon from \"@mui/icons-material/LogoutRounded\";\nimport MenuBookRoundedIcon from \"@mui/icons-material/MenuBookRounded\";\nimport Rating from \"@mui/material/Rating\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useApi } from \"../api/ApiProvide\";\nimport { Book } from \"../api/Book\";\nimport { BookDetails } from \"../api/BookDetails\";\nimport { useParams } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\n\n// const sortedBooks = books.sort((a, b) => b.rating - a.rating).slice(0, 4);\n\nconst HomePage: React.FC = () => {\n  const [books, setBooks] = useState<Book[]>([]);\n  const [sortedBooks, setSortedBooks] = useState<{ [genre: string]: Book[] }>(\n    {},\n  );\n  const apiClient = useApi();\n\n  useEffect(() => {\n    const fetchBooks = async () => {\n      const response = await apiClient.getBooks();\n      if (response.success) {\n        const fetchedBooks = response.data;\n        const promises = fetchedBooks.map(async (book: Book) => {\n          const detailsResponse = await apiClient.getBookDetails(book.id);\n          if (detailsResponse.success) {\n            return { ...book, ...detailsResponse.data };\n          } else {\n            console.error(\n              \"Failed to fetch details for book:\",\n              book.id,\n              detailsResponse.data,\n            );\n            return {\n              ...book,\n              genre: \"No data\",\n              summary: \"No data\",\n              coverImageUrl:\n                \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTNT0xwyLstvC7wH8jYIKur3GTcSq-g6fj2EbL4wk-qaONHYjBswa3rpFsZJeEjuXcG-lw&usqp=CAU\",\n            };\n          }\n        });\n        const booksWithDetails = await Promise.all(promises);\n        console.log(\"Books with Details:\", booksWithDetails);\n        setBooks(booksWithDetails);\n\n        const sorted = booksWithDetails.reduce(\n          (acc: { [genre: string]: Book[] }, book) => {\n            const genre =\n              !book.genre || book.genre === \"No data\"\n                ? \"Not Categorized\"\n                : book.genre;\n            if (!acc[genre]) {\n              acc[genre] = [];\n            }\n            acc[genre].push(book);\n            return acc;\n          },\n          {},\n        );\n        console.log(\"Sorted Books:\", sorted);\n\n        setSortedBooks(sorted);\n      }\n    };\n\n    fetchBooks();\n  }, [apiClient]);\n\n  const navigate = useNavigate();\n\n  const { t, i18n } = useTranslation();\n  /* return (\n    <div>\n      <AppBar position=\"static\" className=\"AppBar\">\n        <Toolbar className=\"ToolBar\">\n          <Typography\n            variant=\"h6\"\n            component=\"div\"\n            style={{ marginRight: \"20px\" }}\n          >\n            <MenuBookRoundedIcon /> My Library\n          </Typography>\n          <Button\n            color=\"inherit\"\n            onClick={() => {\n              navigate(\"/home\");\n            }}\n          >\n            All Books\n          </Button>\n          <Button\n            color=\"inherit\"\n            onClick={() => {\n              navigate(\"/loans\");\n            }}\n          >\n            Your Books\n          </Button>\n          <Button\n            color=\"inherit\"\n            endIcon={<LogoutRoundedIcon />}\n            onClick={() => {\n              navigate(\"/login\");\n            }}\n          >\n            Log Out\n          </Button>\n        </Toolbar>\n      </AppBar>\n\n      <Typography variant=\"h4\" component=\"h2\" className=\"section-title\">\n        Most Popular Books\n      </Typography>\n      <Grid container justifyContent=\"center\" spacing={3} className=\"book-list\">\n        {sortedBooks.map((book, index) => {\n          console.log(book.rating);\n          return (\n            <Grid item xs={12} sm={6} md={4} lg={3} key={index}>\n              <Card className=\"book-card\">\n                <CardContent>\n                  <Typography\n                    variant=\"h5\"\n                    component=\"h2\"\n                    className=\"book-title\"\n                  >\n                    {book.title}\n                  </Typography>\n                  <Typography className=\"book-author\">{book.author}</Typography>\n                  <img\n                    className=\"book-cover\"\n                    src={book.coverImageUrl}\n                    alt={book.title}\n                    style={{ width: \"100%\", height: \"auto\" }}\n                  />\n\n                  <Rating\n                    name=\"book-rating\"\n                    value={book.rating}\n                    precision={0.5}\n                    readOnly\n                  />\n                </CardContent>\n                <Accordion>\n                  <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                  >\n                    <Typography>Details</Typography>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    <Typography>\n                      Genre: {book.genre} <br />\n                      Summary: {book.summary} <br />\n                      Rating: {book.rating} <br />\n                    </Typography>\n                  </AccordionDetails>\n                </Accordion>\n              </Card>\n            </Grid>\n          );\n        })}\n      </Grid>\n\n      {genres.map((genre, index) => (\n        <div key={index}>\n          <Typography variant=\"h4\" component=\"h2\" className=\"section-title\">\n            {genre}\n          </Typography>\n\n          <Grid\n            container\n            justifyContent=\"center\"\n            spacing={3}\n            className=\"book-list\"\n          >\n            {books\n              .filter((book) => book.genre === genre)\n              .map((book, index) => (\n                <Grid item xs={12} sm={6} md={4} lg={3} key={index}>\n                  <Card className=\"book-card\">\n                    <CardContent>\n                      <Typography\n                        variant=\"h5\"\n                        component=\"h2\"\n                        className=\"book-title\"\n                      >\n                        {book.title}\n                      </Typography>\n                      <Typography className=\"book-author\">\n                        {book.author}\n                      </Typography>\n                      <img\n                        className=\"book-cover\"\n                        src={book.coverImageUrl}\n                        alt={book.title}\n                        style={{ width: \"100%\", height: \"auto\" }}\n                      />\n                      <Rating\n                        name=\"book-rating\"\n                        value={book.rating}\n                        precision={0.5}\n                        readOnly\n                      />\n                    </CardContent>\n                    <Accordion>\n                      <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1a-content\"\n                        id=\"panel1a-header\"\n                      >\n                        <Typography>Details</Typography>\n                      </AccordionSummary>\n                      <AccordionDetails>\n                        <Typography>\n                          Genre: {book.genre} <br />\n                          Summary: {book.summary} <br />\n                          <Button variant=\"contained\" color=\"primary\">\n                            Borrow Book\n                          </Button>\n                        </Typography>\n                      </AccordionDetails>\n                    </Accordion>\n                  </Card>\n                </Grid>\n              ))}\n          </Grid>\n\n        </div>\n      ))}\n    </div>\n  );\n\n   */\n  return (\n    <div>\n      <AppBar position=\"static\" className=\"AppBar\">\n        <Toolbar className=\"ToolBar\">\n          <Typography\n            variant=\"h6\"\n            component=\"div\"\n            style={{ marginRight: \"20px\" }}\n          >\n            <MenuBookRoundedIcon /> {t(\"library\")}\n          </Typography>\n          <Button\n            color=\"inherit\"\n            onClick={() => {\n              navigate(\"/home\");\n            }}\n          >\n            {t(\"books\")}\n          </Button>\n          <Button\n            color=\"inherit\"\n            onClick={() => {\n              navigate(\"/loans\");\n            }}\n          >\n            Your Books\n          </Button>\n          <Button\n            color=\"inherit\"\n            onClick={() => {\n              navigate(\"/admin\");\n            }}\n          >\n            Admin Console\n          </Button>\n          <Button\n            color=\"inherit\"\n            endIcon={<LogoutRoundedIcon />}\n            onClick={() => {\n              navigate(\"/login\");\n            }}\n          >\n            Log Out\n          </Button>\n        </Toolbar>\n      </AppBar>\n      {Object.keys(sortedBooks).map((genre, genreIndex) => (\n        <div key={genreIndex}>\n          <Typography variant=\"h4\" component=\"h2\" className=\"section-title\">\n            {genre}\n          </Typography>\n          <Grid\n            container\n            justifyContent=\"center\"\n            spacing={3}\n            className=\"book-list\"\n          >\n            {sortedBooks[genre].map((book, bookIndex) => (\n              <Grid item xs={12} sm={6} md={4} lg={3} key={bookIndex}>\n                <Card className=\"book-card\">\n                  <CardContent>\n                    <Typography\n                      variant=\"h5\"\n                      component=\"h2\"\n                      className=\"book-title\"\n                    >\n                      {book.title}\n                    </Typography>\n                    <Typography className=\"book-author\">\n                      {book.author}\n                    </Typography>\n                    <img\n                      className=\"book-cover\"\n                      src={book.coverImageUrl}\n                      alt={book.title}\n                      style={{ width: \"100%\", height: \"auto\" }}\n                    />\n                  </CardContent>\n                  <Accordion>\n                    <AccordionSummary\n                      expandIcon={<ExpandMoreIcon />}\n                      aria-controls=\"panel1a-content\"\n                      id=\"panel1a-header\"\n                    >\n                      <Typography>Details</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                      <Typography>\n                        Year Published: {book.yearPublished} <br />\n                        Genre: {book.genre} <br />\n                        Summary: {book.summary} <br />\n                      </Typography>\n                    </AccordionDetails>\n                  </Accordion>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}