{"ast":null,"code":"import axios from \"axios\";\nexport class LibraryClient {\n  constructor() {\n    this.baseUrl = \"http://localhost:8080/api\";\n    this.client = void 0;\n    this.client = axios.create({\n      baseURL: this.baseUrl\n    });\n  }\n  async login(data) {\n    try {\n      const response = await this.client.post(\"/auth/login\", data);\n      this.client.defaults.headers.common[\"Authorization\"] = `Bearer ${response.data.token}`;\n      return {\n        success: true,\n        data: undefined,\n        status: response.status\n      };\n    } catch (error) {\n      var _axiosError$response, _axiosError$response2;\n      const axiosError = error;\n      return {\n        success: false,\n        data: (_axiosError$response = axiosError.response) === null || _axiosError$response === void 0 ? void 0 : _axiosError$response.data,\n        status: ((_axiosError$response2 = axiosError.response) === null || _axiosError$response2 === void 0 ? void 0 : _axiosError$response2.status) || 500\n      };\n    }\n  }\n  /* public async getBooks(): Promise<ClientResponse> {\n  try {\n    const response: AxiosResponse<Book[]> = await this.client.get(\"/books\");\n     return {\n      success: true,\n      data: response.data,\n      status: response.status,\n    };\n  } catch (error) {\n    const axiosError = error as AxiosError<Error>;\n     return {\n      success: false,\n      data: axiosError.response?.data,\n      status: axiosError.response?.status || 500,\n    };\n  }\n  }\n    */\n  async getBooks() {\n    try {\n      const response = await this.client.get(\"/books\");\n      const booksWithDetails = await Promise.all(response.data.map(async book => {\n        const detailsResponse = await this.client.get(`/books/${book.id}`);\n        return {\n          ...book,\n          ...detailsResponse.data\n        };\n      }));\n      console.log(booksWithDetails);\n      return {\n        success: true,\n        data: booksWithDetails,\n        status: response.status\n      };\n    } catch (error) {\n      var _axiosError$response3, _axiosError$response4;\n      const axiosError = error;\n      return {\n        success: false,\n        data: (_axiosError$response3 = axiosError.response) === null || _axiosError$response3 === void 0 ? void 0 : _axiosError$response3.data,\n        status: ((_axiosError$response4 = axiosError.response) === null || _axiosError$response4 === void 0 ? void 0 : _axiosError$response4.status) || 500\n      };\n    }\n  }\n}","map":{"version":3,"names":["axios","LibraryClient","constructor","baseUrl","client","create","baseURL","login","data","response","post","defaults","headers","common","token","success","undefined","status","error","_axiosError$response","_axiosError$response2","axiosError","getBooks","get","booksWithDetails","Promise","all","map","book","detailsResponse","id","console","log","_axiosError$response3","_axiosError$response4"],"sources":["/Users/marynaborovyk/Desktop/semestr-4/Network_Technologies/Project/projectNetworkTechnologies/frontend_nt/library-webapp/src/api/library-clients.ts"],"sourcesContent":["import axios, { AxiosError, AxiosInstance, AxiosResponse } from \"axios\";\nimport { LoginResponseDto } from \"./login-response.dto\";\nimport { LoginRequestDto } from \"./login-request.dto\";\nimport { Book } from \"./Book\";\nimport { BookWithDetails } from \"./BookWithDetails\";\nimport {BookDetails} from \"./BookDetails\";\n\ntype ClientResponse = {\n  success: boolean;\n  data: any;\n  status: number;\n};\n\nexport class LibraryClient {\n  private baseUrl = \"http://localhost:8080/api\";\n  private client: AxiosInstance;\n\n  constructor() {\n    this.client = axios.create({\n      baseURL: this.baseUrl,\n    });\n  }\n\n  public async login(data: LoginRequestDto): Promise<ClientResponse> {\n    try {\n      const response: AxiosResponse<LoginResponseDto> = await this.client.post(\n        \"/auth/login\",\n        data,\n      );\n\n      this.client.defaults.headers.common[\"Authorization\"] =\n        `Bearer ${response.data.token}`;\n\n      return {\n        success: true,\n        data: undefined,\n        status: response.status,\n      };\n    } catch (error) {\n      const axiosError = error as AxiosError<Error>;\n\n      return {\n        success: false,\n        data: axiosError.response?.data,\n        status: axiosError.response?.status || 500,\n      };\n    }\n  }\n  /* public async getBooks(): Promise<ClientResponse> {\n  try {\n    const response: AxiosResponse<Book[]> = await this.client.get(\"/books\");\n\n    return {\n      success: true,\n      data: response.data,\n      status: response.status,\n    };\n  } catch (error) {\n    const axiosError = error as AxiosError<Error>;\n\n    return {\n      success: false,\n      data: axiosError.response?.data,\n      status: axiosError.response?.status || 500,\n    };\n  }\n}\n\n   */\n  public async getBooks(): Promise<ClientResponse> {\n    try {\n      const response: AxiosResponse<Book[]> = await this.client.get(\"/books\");\n\n      const booksWithDetails: BookWithDetails[] = await Promise.all(\n          response.data.map(async (book) => {\n            const detailsResponse: AxiosResponse<BookDetails> = await this.client.get(`/books/${book.id}`);\n            return { ...book, ...detailsResponse.data };\n          })\n      );\n      console.log(booksWithDetails);\n\n      return {\n        success: true,\n        data: booksWithDetails,\n        status: response.status,\n      };\n    } catch (error) {\n      const axiosError = error as AxiosError<Error>;\n\n      return {\n        success: false,\n        data: axiosError.response?.data,\n        status: axiosError.response?.status || 500,\n      };\n    }\n  }\n\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAoD,OAAO;AAavE,OAAO,MAAMC,aAAa,CAAC;EAIzBC,WAAWA,CAAA,EAAG;IAAA,KAHNC,OAAO,GAAG,2BAA2B;IAAA,KACrCC,MAAM;IAGZ,IAAI,CAACA,MAAM,GAAGJ,KAAK,CAACK,MAAM,CAAC;MACzBC,OAAO,EAAE,IAAI,CAACH;IAChB,CAAC,CAAC;EACJ;EAEA,MAAaI,KAAKA,CAACC,IAAqB,EAA2B;IACjE,IAAI;MACF,MAAMC,QAAyC,GAAG,MAAM,IAAI,CAACL,MAAM,CAACM,IAAI,CACtE,aAAa,EACbF,IACF,CAAC;MAED,IAAI,CAACJ,MAAM,CAACO,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GACjD,UAASJ,QAAQ,CAACD,IAAI,CAACM,KAAM,EAAC;MAEjC,OAAO;QACLC,OAAO,EAAE,IAAI;QACbP,IAAI,EAAEQ,SAAS;QACfC,MAAM,EAAER,QAAQ,CAACQ;MACnB,CAAC;IACH,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,oBAAA,EAAAC,qBAAA;MACd,MAAMC,UAAU,GAAGH,KAA0B;MAE7C,OAAO;QACLH,OAAO,EAAE,KAAK;QACdP,IAAI,GAAAW,oBAAA,GAAEE,UAAU,CAACZ,QAAQ,cAAAU,oBAAA,uBAAnBA,oBAAA,CAAqBX,IAAI;QAC/BS,MAAM,EAAE,EAAAG,qBAAA,GAAAC,UAAU,CAACZ,QAAQ,cAAAW,qBAAA,uBAAnBA,qBAAA,CAAqBH,MAAM,KAAI;MACzC,CAAC;IACH;EACF;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAIE,MAAaK,QAAQA,CAAA,EAA4B;IAC/C,IAAI;MACF,MAAMb,QAA+B,GAAG,MAAM,IAAI,CAACL,MAAM,CAACmB,GAAG,CAAC,QAAQ,CAAC;MAEvE,MAAMC,gBAAmC,GAAG,MAAMC,OAAO,CAACC,GAAG,CACzDjB,QAAQ,CAACD,IAAI,CAACmB,GAAG,CAAC,MAAOC,IAAI,IAAK;QAChC,MAAMC,eAA2C,GAAG,MAAM,IAAI,CAACzB,MAAM,CAACmB,GAAG,CAAE,UAASK,IAAI,CAACE,EAAG,EAAC,CAAC;QAC9F,OAAO;UAAE,GAAGF,IAAI;UAAE,GAAGC,eAAe,CAACrB;QAAK,CAAC;MAC7C,CAAC,CACL,CAAC;MACDuB,OAAO,CAACC,GAAG,CAACR,gBAAgB,CAAC;MAE7B,OAAO;QACLT,OAAO,EAAE,IAAI;QACbP,IAAI,EAAEgB,gBAAgB;QACtBP,MAAM,EAAER,QAAQ,CAACQ;MACnB,CAAC;IACH,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAe,qBAAA,EAAAC,qBAAA;MACd,MAAMb,UAAU,GAAGH,KAA0B;MAE7C,OAAO;QACLH,OAAO,EAAE,KAAK;QACdP,IAAI,GAAAyB,qBAAA,GAAEZ,UAAU,CAACZ,QAAQ,cAAAwB,qBAAA,uBAAnBA,qBAAA,CAAqBzB,IAAI;QAC/BS,MAAM,EAAE,EAAAiB,qBAAA,GAAAb,UAAU,CAACZ,QAAQ,cAAAyB,qBAAA,uBAAnBA,qBAAA,CAAqBjB,MAAM,KAAI;MACzC,CAAC;IACH;EACF;AAEF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}